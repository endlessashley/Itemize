[{"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/index.js":"1","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/reportWebVitals.js":"2","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/App.js":"3","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Home.js":"4","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Profile.js":"5","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Signup.js":"6","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Login.js":"7","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Header/index.js":"8","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Footer/index.js":"9","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/auth.js":"10","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/queries.js":"11","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/mutations.js":"12","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UserList/index.js":"13","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NovelForm/index.js":"14","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelsList.js":"15","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelDetail.js":"16","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UpdateNovel/index.js":"17"},{"size":500,"mtime":1638278857163,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1638278857179,"results":"20","hashOfConfig":"19"},{"size":2665,"mtime":1639610703215,"results":"21","hashOfConfig":"19"},{"size":677,"mtime":1639581812908,"results":"22","hashOfConfig":"19"},{"size":2162,"mtime":1639587257000,"results":"23","hashOfConfig":"19"},{"size":2702,"mtime":1638541164563,"results":"24","hashOfConfig":"19"},{"size":2522,"mtime":1639585823394,"results":"25","hashOfConfig":"19"},{"size":1490,"mtime":1639585761977,"results":"26","hashOfConfig":"19"},{"size":692,"mtime":1638284236232,"results":"27","hashOfConfig":"19"},{"size":725,"mtime":1639586140851,"results":"28","hashOfConfig":"19"},{"size":800,"mtime":1639590317625,"results":"29","hashOfConfig":"19"},{"size":1214,"mtime":1639613310088,"results":"30","hashOfConfig":"19"},{"size":1220,"mtime":1639581801122,"results":"31","hashOfConfig":"19"},{"size":6502,"mtime":1639500401975,"results":"32","hashOfConfig":"19"},{"size":2050,"mtime":1639610954609,"results":"33","hashOfConfig":"19"},{"size":1801,"mtime":1639666231710,"results":"34","hashOfConfig":"19"},{"size":3671,"mtime":1639613965868,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1md7kg3",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/index.js",[],["74","75"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/reportWebVitals.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/App.js",["76"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Home.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Profile.js",["77","78","79","80","81"],"import React from 'react';\n\nimport { Redirect, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\n// import NovelsList from '../components/NovelsList';\nimport NovelForm from '../components/NovelForm';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  QUERY_SINGLE_USER\n  // , QUERY_ME\n} from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  // const { userId } = useParams();\n\n  // If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const { loading, data } = useQuery(\n    QUERY_SINGLE_USER\n    // userId ? QUERY_SINGLE_USER : QUERY_ME,\n    // {\n    //   variables: { userId: userId },\n    // }\n  );\n  let user;\n\n  if (data) {\n    user = data.user;\n    console.log(user)\n    console.log(user._id)\n  }\n\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  // const user = data?.me || data?.user || {};\n\n\n  // Use React Router's `<Redirect />` component to redirect to personal profile page if username is yours\n  // if (Auth.loggedIn() && Auth.getProfile().data._id === userId) {\n  //   return <Redirect to=\"/me\" />;\n  // }\n\n  // if (loading) {\n  //   return <div>Loading...</div>;\n  // }\n\n  // if (!user?.name) {\n  //   return (\n  //     <h4>\n  //       You need to be logged in to see your profile page. Use the navigation\n  //       links above to sign up or log in!\n  //     </h4>\n  //   );\n  // }\n\n  return (\n\n    //   {user ? (\n    //       <h2 className=\"card-header\">\n    //         {user.name}'s Lists:\n    //       </h2>\n    //       {user.novels?.length > 0 && (\n    //     <NovelsList novels={user.novels}/>\n    //     <div className=\"my-4 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n    //       <NovelForm {user._id} />\n    //     </div>\n    //   )}\n    // )}\n\n<div className=\"container\">\n  {user? (\n    <>\n    <h2>{user.name}'s Lists:</h2>\n    <div className=\"row\">\n      <Link to = {`/novels/${user._id}`}>\n      <div className=\"card\">\n        Novels\n      </div>\n      </Link>\n    </div>\n    </>\n  ):null}\n\n \n</div>\n\n\n  );\n};\n\nexport default Profile;\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Signup.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Login.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Header/index.js",["82","83"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\nimport { Redirect, useParams } from 'react-router-dom';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n\n  };\n  return (\n    <header className=\"mb-4 py-3 display-flex align-center\">\n      <div className=\"container flex-column justify-space-between-lg justify-center align-center text-center\">\n        <Link className=\"text-primary\" to=\"/\">\n          <h1 className=\"m-0\" style={{ fontSize: '3rem' }}>\n            Itemize\n          </h1>\n        </Link>\n        <p className=\"m-0 text-dark\" style={{ fontSize: '1.75rem', fontWeight: '700' }}>\n          Track your progress. Meet your goals.\n        </p>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/me\">\n                View My Profile\n              </Link>\n              <Link to = \"/\">\n              <button className=\"btn btn-lg btn-primary m-2\" onClick={logout}>Log Out\n              </button>\n              </Link>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Footer/index.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/auth.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/queries.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/mutations.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UserList/index.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NovelForm/index.js",["84"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n// import { useStoreContext } from \"../../utils/GlobalState\";\n\nimport { ADD_NOVEL } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nfunction NovelForm( props ) {\n  // const [state, dispatch] = useStoreContext();\n  const [formState, setFormState] = useState({ name: '', author: '', rank: '', isComplete: '' });\n \n\n  const [addNovel, { error }] = useMutation(ADD_NOVEL);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const data = await addNovel({\n        variables: { name: formState.name, author: formState.author, rank: formState.rank, isComplete: formState.isComplete },\n      });\n\n      //       setNovel({name: '', author: '', rank: '', completed: ''});\n      //     } catch (err) {\n      //       console.error(err);\n      //     }\n      //   };\n\n      // window.location.reload();\n      \n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n    const handleChange = (event) => {\n      const { name, value } = event.target;\n\n      setFormState({\n        ...formState,\n        [name]: value,\n      });\n    };\n\n    // const handleCompletedClick = () => {\n    //   let complete = !formState.isComplete;\n    //   console.log(complete);\n    //   setFormState({ isComplete: complete});\n    // }\n\n\n\n  //   return (\n  //     <div>\n  //       <h4>Add a new novel to your list below:</h4>\n\n  //       {Auth.loggedIn() ? (\n  //         <form\n  //           className=\"flex-row justify-center justify-space-between-md align-center\"\n  //           onSubmit={handleFormSubmit}\n  //         >\n  //           <div className=\"col-12 col-lg-9\">\n  //             <input\n  //               placeholder=\"Author\"\n  //               value={formState.author}\n  //               className=\"form-input w-100\"\n  //               onChange={handleChange}\n  //             />\n  //             <input\n  //               placeholder=\"Title\"\n  //               value={formState.name}\n  //               className=\"form-input w-100\"\n  //               onChange={handleChange}\n  //             />\n  //             <input\n  //               placeholder=\"Rank\"\n  //               value={formState.rank}\n  //               className=\"form-input w-100\"\n  //               onChange={handleChange}\n  //             />\n  //           </div>\n\n  //           <div className=\"col-12 col-lg-3\">\n  //             <button className=\"btn btn-info btn-block py-3\" type=\"submit\">\n  //               Add Novel\n  //           </button>\n  //           </div>\n  //           {error && (\n  //             <div className=\"col-12 my-3 bg-danger text-white p-3\">\n  //               {error.message}\n  //             </div>\n  //           )}\n  //         </form>\n  //       ) : (\n  //         <p>\n  //           You need to be logged in to endorse skills. Please{' '}\n  //           <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n  //         </p>\n  //       )}\n  //     </div>\n  //   );\n  // };\n\n\n\n// import React, { useState } from 'react';\n// import { useMutation } from '@apollo/client';\n\n// import { ADD_NOVEL } from '../../utils/mutations';\n\n// const NovelForm = () => {\n//   const [formState, setFormState] = useState({\n//     name: '',\n//     author: '',\n//     rank: '',\n//   });\n\n\n  // Set up our mutation with an option to handle errors\n  // const [addNovel, { error }] = useMutation(ADD_NOVEL);\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n    // On form submit, perform mutation and pass in form data object as arguments\n    // It is important that the object fields are match the defined parameters in `ADD_THOUGHT` mutation\n//     try {\n//       const { data } = \n//       addNovel({\n//         variables: { ...formState },\n//       });\n\n//       window.location.reload();\n//       console.log(formState)\n//       console.log(data)\n//     } catch (err) {\n//       console.error(err);\n//     }\n//   };\n\n//   const handleChange = (event) => {\n//     const { name, value } = event.target;\n\n//     setFormState({\n//       ...formState,\n//       [name]: value,\n//     });\n//   };\n\n\n  return (\n    <div>\n      <h4>Add a new novel to your list below:</h4>\n\n      {Auth.loggedIn() ? (\n        <form\n          className=\"flex-row justify-center justify-space-between-md align-center\"\n          onSubmit={handleFormSubmit}>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"author\"\n              placeholder=\"Author\"\n              value={formState.author}\n              type=\"author\"\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"name\"\n              type=\"name\"\n              placeholder=\"Title\"\n              className=\"form-input w-100\"\n              value={formState.name}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"rank\"\n              placeholder=\"Rank\"\n              type=\"rank\"\n              value={formState.rank}\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"isComplete\"\n              placeholder=\"Completed? Y/N\"\n              type=\"isComplete\"\n              value={formState.isComplete}\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          {/* <div>\n          <label>Completed?   </label>\n    <input name=\"isComplete\" type=\"checkbox\" \n    defaultChecked={formState.isComplete} \n    onChange={handleCompletedClick} \n    className=\"filled-in\" id=\"filled-in-box\"/>\n  </div> */}\n          <div className=\"col-12 col-lg-3\">\n            <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n              Add Novel\n            </button>\n          </div>\n          {error && (\n            <div className=\"col-12 my-3 bg-danger text-white p-3\">\n              Something went wrong...\n            </div>\n          )}\n        </form>\n      ) : (<p>\n                  You need to be logged in to endorse skills. Please{' '}\n                  <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n                </p>)\n\n};\n</div>\n)\n}\n\n\nexport default NovelForm;\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelsList.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelDetail.js",["85","86","87","88","89","90"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UpdateNovel/index.js",["91","92","93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":24,"column":7,"nodeType":"101","messageId":"102","endLine":24,"endColumn":16},{"ruleId":"99","severity":1,"message":"103","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":18},{"ruleId":"99","severity":1,"message":"104","line":3,"column":20,"nodeType":"101","messageId":"102","endLine":3,"endColumn":29},{"ruleId":"99","severity":1,"message":"105","line":7,"column":8,"nodeType":"101","messageId":"102","endLine":7,"endColumn":17},{"ruleId":"99","severity":1,"message":"106","line":16,"column":8,"nodeType":"101","messageId":"102","endLine":16,"endColumn":12},{"ruleId":"99","severity":1,"message":"107","line":22,"column":11,"nodeType":"101","messageId":"102","endLine":22,"endColumn":18},{"ruleId":"99","severity":1,"message":"103","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":18},{"ruleId":"99","severity":1,"message":"104","line":5,"column":20,"nodeType":"101","messageId":"102","endLine":5,"endColumn":29},{"ruleId":"99","severity":1,"message":"108","line":20,"column":13,"nodeType":"101","messageId":"102","endLine":20,"endColumn":17},{"ruleId":"99","severity":1,"message":"109","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"110","line":1,"column":28,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"111","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":2,"column":16,"nodeType":"101","messageId":"102","endLine":2,"endColumn":25},{"ruleId":"99","severity":1,"message":"112","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":18},{"ruleId":"99","severity":1,"message":"113","line":5,"column":9,"nodeType":"101","messageId":"102","endLine":5,"endColumn":26},{"ruleId":"99","severity":1,"message":"114","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":13},{"ruleId":"99","severity":1,"message":"111","line":3,"column":10,"nodeType":"101","messageId":"102","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":3,"column":16,"nodeType":"101","messageId":"102","endLine":3,"endColumn":25},{"ruleId":"115","severity":1,"message":"116","line":62,"column":49,"nodeType":"117","messageId":"118","endLine":62,"endColumn":50},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'errorLink' is assigned a value but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useParams' is defined but never used.","'NovelForm' is defined but never used.","'Auth' is defined but never used.","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'useQuery' is defined but never used.","'QUERY_SINGLE_USER' is defined but never used.","'gql' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]