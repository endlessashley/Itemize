[{"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/index.js":"1","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/reportWebVitals.js":"2","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/App.js":"3","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Home.js":"4","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Profile.js":"5","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Signup.js":"6","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Login.js":"7","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Header/index.js":"8","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Footer/index.js":"9","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/auth.js":"10","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/queries.js":"11","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/mutations.js":"12","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UserList/index.js":"13","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NovelForm/index.js":"14","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelsList.js":"15","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UpdateNovel/index.js":"16","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NonfictionsList.js":"17","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NonfictionForm/index.js":"18","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/CompletedNonfiction.js":"19","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/CurrentBooksList.js":"20","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/CurrentBookForm/index.js":"21","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/TestPagination.js":"22","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Pagination.js":"23","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/usePaginataion.js":"24","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelProgress.js":"25","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/FinishedNovels/index.js":"26"},{"size":500,"mtime":1638278857163,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1638278857179,"results":"29","hashOfConfig":"28"},{"size":3296,"mtime":1643073772406,"results":"30","hashOfConfig":"28"},{"size":677,"mtime":1639581812908,"results":"31","hashOfConfig":"28"},{"size":1157,"mtime":1640305449285,"results":"32","hashOfConfig":"28"},{"size":2702,"mtime":1638541164563,"results":"33","hashOfConfig":"28"},{"size":2522,"mtime":1639585823394,"results":"34","hashOfConfig":"28"},{"size":1539,"mtime":1640304863464,"results":"35","hashOfConfig":"28"},{"size":692,"mtime":1638284236232,"results":"36","hashOfConfig":"28"},{"size":725,"mtime":1639586140851,"results":"37","hashOfConfig":"28"},{"size":1116,"mtime":1643051767389,"results":"38","hashOfConfig":"28"},{"size":2312,"mtime":1643054041769,"results":"39","hashOfConfig":"28"},{"size":1200,"mtime":1640304718783,"results":"40","hashOfConfig":"28"},{"size":3447,"mtime":1643114246073,"results":"41","hashOfConfig":"28"},{"size":5313,"mtime":1643114191805,"results":"42","hashOfConfig":"28"},{"size":2339,"mtime":1639679134109,"results":"43","hashOfConfig":"28"},{"size":4806,"mtime":1640267187318,"results":"44","hashOfConfig":"28"},{"size":3267,"mtime":1640267113146,"results":"45","hashOfConfig":"28"},{"size":7584,"mtime":1640267667657,"results":"46","hashOfConfig":"28"},{"size":4200,"mtime":1640301029891,"results":"47","hashOfConfig":"28"},{"size":2807,"mtime":1640441619050,"results":"48","hashOfConfig":"28"},{"size":1328,"mtime":1640302842980,"results":"49","hashOfConfig":"28"},{"size":1658,"mtime":1640303186659,"results":"50","hashOfConfig":"28"},{"size":2179,"mtime":1640303113056,"results":"51","hashOfConfig":"28"},{"size":8426,"mtime":1643075035598,"results":"52","hashOfConfig":"28"},{"size":4799,"mtime":1643113303726,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1md7kg3",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"56"},"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/index.js",[],["117","118"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/reportWebVitals.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/App.js",["119"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Home.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Profile.js",["120","121"],"import React from 'react';\n\nimport { useQuery } from '@apollo/client';\n\nimport { Link } from 'react-router-dom';\n\nimport {\n  QUERY_SINGLE_USER\n} from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n\n  const { loading, data } = useQuery(\n    QUERY_SINGLE_USER\n\n  );\n  let user;\n\n  if (data) {\n    user = data.user;\n    console.log(user)\n    console.log(user._id)\n  }\n\n\n  return (\n\n<>\n\n  {user? (\n    <>\n    <h2>{user.name}'s Lists:</h2>\n    <div className=\"row\">\n      \n      <div className=\"col-sm-12 col-md-3 col-lg-3 profile-card\">\n      <Link to = {`/novels/${user._id}`}>All Novels</Link>\n      <br/>\n      <Link to = {'/novelprogress'}>Novel Progress</Link>\n      </div>\n      <div className=\"col-sm-12 col-md-3 col-lg-3 profile-card\">\n      <Link to = {`/nonfiction`}>All Nonfiction</Link>\n      <br/>\n      <Link to = {'/nonfictionprogress'}>Nonfiction Progress</Link>\n      </div>\n      <div className=\"col-sm-12 col-md-3 col-lg-3 profile-card\">\n      <Link to = {`/currentbooks`}>Current Books</Link>\n      <br/>\n      <br/>\n      </div>\n      \n    </div>\n    </>\n  ):null}\n\n \n\n</>\n\n  );\n};\n\nexport default Profile;\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Signup.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Login.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Header/index.js",["122","123"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\nimport { Redirect, useParams } from 'react-router-dom';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n\n  };\n  return (\n    <header className=\"mb-4 py-3 display-flex align-center\">\n      <div className=\"container flex-column justify-space-between-lg justify-center align-center text-center\">\n        <Link className=\"text-primary\" to=\"/\">\n          <h1 className=\"m-0\" style={{ fontSize: '3rem' }}>\n            Just Pete Things\n          </h1>\n          <br/>\n          <br/>\n        </Link>\n        {/* <p className=\"m-0 text-dark\" style={{ fontSize: '1.75rem', fontWeight: '700' }}>\n          Track your progress. Meet your goals.\n        </p> */}\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/me\">\n                View My Profile\n              </Link>\n              <Link to = \"/\">\n              <button className=\"btn btn-lg btn-primary m-2\" onClick={logout}>Log Out\n              </button>\n              </Link>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Footer/index.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/auth.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/queries.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/mutations.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UserList/index.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NovelForm/index.js",["124","125"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelsList.js",["126","127","128","129","130","131","132","133","134","135"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UpdateNovel/index.js",["136","137","138","139","140"],"import React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, useParams } from 'react-router-dom';\nimport { UPDATE_NOVEL, ADD_NOVEL } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\n\nfunction UpdateNovel(props) {\n    const [isComplete, setIsComplete] = useState('');\n    // const [novelId, set_id] = useState('');\n    const [updateNovel] = useMutation(UPDATE_NOVEL);\n    // const [addNovel, {error}] = useMutation(ADD_NOVEL)\n\n  \n\n    const handleEditSubmit = async (event) => {\n        event.preventDefault();\n    \n        try {\n          const { data } = await updateNovel({\n            variables: {\n              isComplete\n            },\n          });\n          setIsComplete('');\n        //   (data);\n        //   console.log(props)\n          //calls for the query on either the homepage or daypage to run again\n          props.refetch();\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n    // const handleEditSubmit = async (event) => {\n    //     event.preventDefault();\n\n    //     try {\n    //         const { data } = await updateNovel({\n    //             variables: {\n    //                 novelId,\n    //                 isComplete,\n    //             },\n    //         });\n    //         setIsComplete('');\n    //         set_id('');\n    //         console.log(data);\n    //         window.location.reload();\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n    // };\n\n    return (\n            <div>\n        \n              {Auth.loggedIn() ? (\n              <div>\n                  <h3>Update task:</h3>\n                  <form className=\"\" onSubmit={handleEditSubmit}>\n                    <input\n                      type=\"text\"\n                      value={isComplete}\n                      name=\"text\"\n                      onChange={(e) => {\n                        setIsComplete(e.target.value)\n                      }}\n                    ></input>\n                    <button className=\"container\">Update</button>\n                  </form>\n                </div>\n                )\n               : (\n                <p>\n                  You need to be logged in to start a todo list.\n                </p>\n              )}\n            </div>\n          );\n        };\n\n\n\nexport default UpdateNovel\n\n\n\n\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NonfictionsList.js",["141","142","143","144"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_NONFICTIONS, QUERY_SINGLE_USER } from '../utils/queries';\nimport { UPDATE_NONFICTION, REMOVE_NONFICTION } from '../utils/mutations';\n\nimport NonfictionForm from \"../components/NonfictionForm\";\n\n\nfunction NonfictionsList() {\n    const { loading, data } = useQuery(QUERY_NONFICTIONS);\n    const [formState, setFormState] = useState('');\n    const [showEdit, setShowEdit] = useState(false);\n\n    const [removeNonfiction] = useMutation(REMOVE_NONFICTION);\n\n\n    const [editNonfiction, { error }] = useMutation(UPDATE_NONFICTION)\n\n    let nonfictions;\n\n    // let x = document.getElementById(\"edit-box\")\n\n    // let condition\n\n\n    if (data) {\n        nonfictions = data.nonfictions\n        console.log(nonfictions)\n    }\n\n\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n\n        console.log(formState)\n    };\n\n\n\n\n\n    return (\n        <>\n\n\n                <div className=\"row\">\n\n\n                    {nonfictions ? (\n                        <>\n                            <h2>Your Nonfiction:</h2>\n                            {nonfictions.map((nonfiction) => (\n\n                                <div\n                                    key={nonfiction._id}\n\n                                    className=\"col-sm-12 col-md-2 col-lg-2 card\"\n                                \n\n                                >\n                                    <p>  {nonfiction.name}\n                                        < br />\n                                        <span className=\"card-subheader\" >by</span> {nonfiction.author}\n                                        < br />\n                                        <span className=\"card-subheader\">Rank:</span> {nonfiction.rank}\n                                        < br />\n                                        <span key={nonfiction.isComplete}>{nonfiction.isComplete}</span>\n                                    </p>\n                                    <button className=\"btn btn-dark btn-sm  py-1\" onClick={() => setShowEdit(!showEdit)}>{showEdit ? 'Finished Updating' : 'Update Entry'}</button>\n                                    {showEdit && <div>\n                                        <form\n\n                                            // className=\"flex-row justify-center justify-space-between-md align-center\"\n                                            onSubmit={e => {\n                                                e.preventDefault();\n                                                editNonfiction({ variables: { _id: nonfiction._id, isComplete: formState.isComplete } });\n                                                window.location.reload();\n                                            }}\n                                        >\n                                            <select value={formState.isComplete}\n                                                onChange={handleChange}\n                                                type=\"isComplete\"\n                                                name=\"isComplete\"\n                                                placeholder=\"Update Completed Status\"\n                                                className=\"form-input w-100 select\">\n                                                <option value=\"Complete\">Complete</option>\n                                                <option value=\"Incomplete\">Incomplete</option>\n                                                <option selected value=\"N/A\"> Set Status</option>\n                                            </select>\n\n\n\n                                            <button className=\"btn btn-dark btn-sm  py-1\" type=\"submit\">Submit</button>\n                                        </form>\n                                    </div>}\n                                    <div>\n                                        <button className=\"btn btn-sm btn-primary py-1\"\n                                            type=\"submit\"\n                                            onClick={() => {\n                                                removeNonfiction({ variables: { _id: nonfiction._id } })\n                                            }}>Remove Entry</button>\n                                    </div>\n\n\n\n                                </div>\n\n\n\n\n\n\n                            ))}\n                            <div className=\"col-sm-12\">\n                                <NonfictionForm />\n                            </div>\n                        </>\n                    ) : null}\n                </div>\n\n        </>\n    );\n}\n\n\nexport default NonfictionsList;","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NonfictionForm/index.js",["145"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n// import { useStoreContext } from \"../../utils/GlobalState\";\n\nimport { ADD_NONFICTION } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nfunction NonfictionForm(props) {\n  // const [state, dispatch] = useStoreContext();\n  const [formState, setFormState] = useState({ name: '', author: '', rank: '', isComplete: '' });\n\n\n  const [addNonfiction, { error }] = useMutation(ADD_NONFICTION);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const data = await addNonfiction({\n        variables: { name: formState.name, author: formState.author, rank: formState.rank, isComplete: formState.isComplete },\n      });\n\n      window.location.reload();\n\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n\n\n\n  return (\n    <div>\n      <h4>Add new nonfiction to your list below:</h4>\n\n      {Auth.loggedIn() ? (\n        <form\n          className=\"flex-row justify-center justify-space-between-md align-center\"\n          onSubmit={handleFormSubmit}>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"author\"\n              placeholder=\"Author\"\n              value={formState.author}\n              type=\"author\"\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"name\"\n              type=\"name\"\n              placeholder=\"Title\"\n              className=\"form-input w-100\"\n              value={formState.name}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"rank\"\n              placeholder=\"Rank\"\n              type=\"rank\"\n              value={formState.rank}\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <select value={formState.isComplete}\n              onChange={handleChange}\n              type=\"isComplete\"\n              name=\"isComplete\"\n              className=\"form-input w-100\">\n                <option selected value=\"N/A\">Select Completed Status</option>\n              <option value=\"Complete\">Complete</option>\n              <option value=\"Incomplete\">Incomplete</option>\n              \n            </select>\n          </div>\n          <div className=\"col-12 col-lg-3\">\n            <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n              Add Nonfiction\n            </button>\n          </div>\n          {error && (\n            <div className=\"col-12 my-3 bg-danger text-white p-3\">\n              Something went wrong...\n            </div>\n          )}\n        </form>\n      ) : (<p>\n        You need to be logged in to endorse skills. Please{' '}\n        <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n      </p>)\n\n      }\n    </div>\n  )\n}\n\n\nexport default NonfictionForm;","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/CompletedNonfiction.js",["146","147","148","149","150","151"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_NONFICTIONS, QUERY_SINGLE_USER } from '../utils/queries';\nimport { UPDATE_NONFICTION, REMOVE_NONFICTION } from '../utils/mutations';\n\nimport NonfictionForm from \"../components/NonfictionForm\";\n\nfunction CompletedNonfiction() {\n\n    const { loading, data } = useQuery(QUERY_NONFICTIONS);\n    const [showEdit, setShowEdit] = useState(false);\n    const [formState, setFormState] = useState('');\n\n    const [removeNonfiction] = useMutation(REMOVE_NONFICTION);\n\n    let nonfictions;\n    let complete;\n    let incomplete;\n\n\n\n    const [editNonfiction, { error }] = useMutation(UPDATE_NONFICTION)\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n\n        console.log(formState)\n    };\n\n    if (data) {\n        nonfictions = data.nonfictions\n        console.log(nonfictions)\n        complete = nonfictions.filter(nonfiction => nonfiction.isComplete == \"Complete\");\n        console.log(complete)\n        incomplete = nonfictions.filter(nonfiction => nonfiction.isComplete !==\"Complete\");\n        console.log(incomplete)\n\n    }\n    \n\nreturn (\n    <>\n\n\n        <div className=\"row\">\n\n\n            {complete ? (\n                <>\n                    <h2>Completed Nonfiction ({complete.length}/{nonfictions.length}):</h2>\n                    {complete.map((nonfiction) => (\n\n\n                        <div\n                            key={nonfiction._id}\n\n                            className=\"col-sm-12 col-md-2 col-lg-2 card\"\n                 \n\n                        >\n                            <p>  {nonfiction.name}\n                                < br />\n                                <span className=\"card-subheader\" >by</span> {nonfiction.author}\n                                < br />\n                                <span className=\"card-subheader\">Rank:</span> {nonfiction.rank}\n                                < br />\n                                <span key={nonfiction.isComplete}\n                                    >\n                                    {nonfiction.isComplete}</span>\n                            </p>\n                            <button className=\"btn btn-dark btn-sm  py-1\" onClick={() => setShowEdit(!showEdit)}>{showEdit ? 'Finished Updating' : 'Update Entry'}</button>\n                            {showEdit && <div>\n                                <form\n\n\n                                    onSubmit={e => {\n                                        e.preventDefault();\n                                        editNonfiction({ variables: { _id: nonfiction._id, isComplete: formState.isComplete } });\n                                        window.location.reload();\n                                    }}\n                                >\n                                    <select value={formState.isComplete}\n                                        onChange={handleChange}\n                                        type=\"isComplete\"\n                                        name=\"isComplete\"\n                                        placeholder=\"Update Completed Status\"\n                                        className=\"form-input w-100 select\">\n                                        <option value=\"Complete\">Complete</option>\n                                        <option value=\"Incomplete\">Incomplete</option>\n                                        <option selected value=\"N/A\"> Set Status</option>\n                                    </select>\n\n\n\n                                    <button className=\"btn btn-dark btn-sm  py-1\" type=\"submit\">Submit</button>\n                                </form>\n                            </div>}\n                            <div>\n                                <button className=\"btn btn-sm btn-primary py-1\"\n                                    type=\"submit\"\n                                    onClick={() => {\n                                        removeNonfiction({ variables: { _id: nonfiction._id } })\n                                        window.location.reload()\n                                    }}>Remove Entry</button>\n                            </div>\n\n\n\n                        </div>\n\n\n\n\n\n\n                    ))}\n\n                </>\n            ) : null}\n            {incomplete ? (\n                <>\n                    <h2>Incomplete ({incomplete.length}/{nonfictions.length}):</h2>\n                    {incomplete.map((nonfiction) => (\n\n\n                        <div\n                            key={nonfiction._id}\n\n                            className=\"col-sm-12 col-md-2 col-lg-2 card\"\n                 \n\n                        >\n                            <p>  {nonfiction.name}\n                                < br />\n                                <span className=\"card-subheader\" >by</span> {nonfiction.author}\n                                < br />\n                                <span className=\"card-subheader\">Rank:</span> {nonfiction.rank}\n                                < br />\n                                <span key={nonfiction.isComplete}\n                                    >\n                                    {nonfiction.isComplete}</span>\n                            </p>\n                            <button className=\"btn btn-dark btn-sm  py-1\" onClick={() => setShowEdit(!showEdit)}>{showEdit ? 'Finished Updating' : 'Update Entry'}</button>\n                            {showEdit && <div>\n                                <form\n\n\n                                    onSubmit={e => {\n                                        e.preventDefault();\n                                        editNonfiction({ variables: { _id: nonfiction._id, isComplete: formState.isComplete } });\n                                        window.location.reload();\n                                    }}\n                                >\n                                    <select value={formState.isComplete}\n                                        onChange={handleChange}\n                                        type=\"isComplete\"\n                                        name=\"isComplete\"\n                                        placeholder=\"Update Completed Status\"\n                                        className=\"form-input w-100 select\">\n                                        <option value=\"Complete\">Complete</option>\n                                        <option value=\"Incomplete\">Incomplete</option>\n                                        <option selected value=\"N/A\"> Set Status</option>\n                                    </select>\n\n\n\n                                    <button className=\"btn btn-dark btn-sm  py-1\" type=\"submit\">Submit</button>\n                                </form>\n                            </div>}\n                            <div>\n                                <button className=\"btn btn-sm btn-primary py-1\"\n                                    type=\"submit\"\n                                    onClick={() => {\n                                        removeNonfiction({ variables: { _id: nonfiction._id } })\n                                        window.location.reload()\n                                    }}>Remove Entry</button>\n                            </div>\n\n\n\n                        </div>\n\n\n\n\n\n\n                    ))}\n\n                </>\n            ) : null}\n\n\n\n        </div>\n\n    </>\n);\n}\n\n\nexport default CompletedNonfiction;","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/CurrentBooksList.js",["152","153","154"],"import React, { useState } from 'react';\n\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_CURRENT_BOOKS, QUERY_SINGLE_USER } from '../utils/queries';\nimport { UPDATE_CURRENT_BOOK, REMOVE_CURRENT_BOOK } from '../utils/mutations';\n\nimport CurrentBookForm from \"../components/CurrentBookForm\";\n\n\nfunction CurrentBooksList() {\n    const { loading, data } = useQuery(QUERY_CURRENT_BOOKS);\n    const [formState, setFormState] = useState('');\n    const [showEdit, setShowEdit] = useState(false);\n\n    const [removeCurrentBook] = useMutation(REMOVE_CURRENT_BOOK);\n\n\n    const [editCurrentBook, { error }] = useMutation(UPDATE_CURRENT_BOOK)\n\n    let currentBooks;\n\n\n\n    if (data) {\n        currentBooks = data.currentBooks\n        console.log(currentBooks)\n\n    }\n\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n\n        console.log(formState)\n    };\n\n\n\n    return (\n        <>\n\n\n                <div className=\"row\">\n\n\n                    {currentBooks ? (\n                        <>\n                            <h2>Your Current Books:</h2>\n                            {currentBooks.map((currentBook) => (\n\n                                <div\n                                    key={currentBook._id}\n\n                                    className=\"col-sm-12 col-md-2 col-lg-2 card\"\n                                \n\n                                >\n                                    <p>  <span className=\"card-subheader\">{currentBook.name}</span> \n                                        <br />\n                                        {currentBook.pagesRead}/{currentBook.totalPages} Pages Read\n                                        < br />\n                                    </p>\n                                    <button className=\"btn btn-dark btn-sm  py-1\" onClick={() => setShowEdit(!showEdit)}>{showEdit ? 'Finished Updating' : 'Update Entry'}</button>\n                                    {showEdit && <div>\n                                        <form\n\n                                            // className=\"flex-row justify-center justify-space-between-md align-center\"\n                                            onSubmit={e => {\n                                                e.preventDefault();\n                                                editCurrentBook({ variables: { _id: currentBook._id, pagesRead: formState.pagesRead } });\n                                                window.location.reload();\n                                            }}\n                                        >\n                                            <input value={formState.pagesRead}\n                                                onChange={handleChange}\n                                                type=\"number\"\n                                                name=\"pagesRead\"\n                                                placeholder=\"Update Pages\"\n                                                className=\"form-input w-100 select\">\n                                            </input>\n\n\n\n                                            <button className=\"btn btn-dark btn-sm  py-1\" type=\"submit\">Submit</button>\n                                        </form>\n                                    </div>}\n                                    <div>\n                                        <button className=\"btn btn-sm btn-primary py-1\"\n                                            type=\"submit\"\n                                            onClick={() => {\n                                                removeCurrentBook({ variables: { _id: currentBook._id } })\n                                            }}>Remove Entry</button>\n                                    </div>\n\n\n\n                                </div>\n\n\n\n\n\n\n                            ))}\n                            <div className=\"col-sm-12\">\n                                <CurrentBookForm />\n                            </div>\n                        </>\n                    ) : null}\n                </div>\n\n        </>\n    );\n}\n\n\nexport default CurrentBooksList;","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/CurrentBookForm/index.js",["155"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n// import { useStoreContext } from \"../../utils/GlobalState\";\n\nimport { ADD_CURRENT_BOOK } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nfunction CurrentBookForm(props) {\n  // const [state, dispatch] = useStoreContext();\n  const [formState, setFormState] = useState({ name: '', totalPages: '', pagesRead: ''});\n\n\n  const [addCurrentBook, { error }] = useMutation(ADD_CURRENT_BOOK);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const data = await addCurrentBook({\n        variables: { name: formState.name, totalPages: formState.totalPages, pagesRead: formState.pagesRead },\n      });\n\n      window.location.reload();\n\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n\n\n\n  return (\n    <div>\n      <h4>Add a new current book to your list below:</h4>\n\n      {Auth.loggedIn() ? (\n        <form\n          className=\"flex-row justify-center justify-space-between-md align-center\"\n          onSubmit={handleFormSubmit}>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              className=\"form-input w-100\"\n              value={formState.name}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"totalPages\"\n              placeholder=\"Total Pages\"\n              type=\"number\"\n              value={formState.totalPages}\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input value={formState.pagesRead}\n              onChange={handleChange}\n              type=\"number\"\n              name=\"pagesRead\"\n              placeholder=\"Pages Read\"\n              className=\"form-input w-100\">\n              \n            </input>\n          </div>\n          <div className=\"col-12 col-lg-3\">\n            <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n              Add Current Book\n            </button>\n          </div>\n          {error && (\n            <div className=\"col-12 my-3 bg-danger text-white p-3\">\n              Something went wrong...\n            </div>\n          )}\n        </form>\n      ) : (<p>\n        You need to be logged in to endorse skills. Please{' '}\n        <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n      </p>)\n\n      }\n    </div>\n  )\n}\n\n\nexport default CurrentBookForm;\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/TestPagination.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Pagination.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/usePaginataion.js",["156"],"\n   \nimport React from 'react';\nimport { useMemo } from 'react';\n\nexport const DOTS = '...';\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    /*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelProgress.js",["157","158","159","160","161","162","163","164"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/FinishedNovels/index.js",["165","166","167","168","169","170","171"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_NOVELS, QUERY_SINGLE_USER } from '../../utils/queries';\nimport { UPDATE_NOVEL, REMOVE_NOVEL } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\nimport NovelForm from \"../NovelForm\";\n\nfunction FinishedNovels() {\n\n    const { loading, data } = useQuery(QUERY_NOVELS);\n    const [showEdit, setShowEdit] = useState(false);\n    const [formState, setFormState] = useState('');\n    const [searchValue, setSearchValue] = useState(\"\")\n    const [showNovelForm, setShowNovelForm] = useState(false)\n\n    const [removeNovel] = useMutation(REMOVE_NOVEL);\n\n    let novels;\n    let complete;\n    let incomplete;\n\n\n\n    const [editNovel, { error }] = useMutation(UPDATE_NOVEL)\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n\n        console.log(formState)\n    };\n\n    if (data) {\n        novels = data.novels\n        console.log(novels)\n        // complete = novels.filter(novel => novel.isComplete == \"Complete\" && novel.owner == Auth.getProfile().data.name);\n        // console.log(complete)\n        // incomplete = novels.filter(novel => novel.isComplete !==\"Complete\");\n        // console.log(incomplete)\n\n    }\n\n\n    return (\n\n        <div className=\"row\" >\n\n            <button className=\"btn btn-showme btn-block py-3\" onClick={() => setShowNovelForm(!showNovelForm)}>{showNovelForm ? 'Finished Adding' : 'Click to Add a New Novel'}</button>\n            {showNovelForm && <div><NovelForm /></div>}\n\n            <div style={{margin: \"20px\"}}>\n                <h2>Search Novels: </h2>\n                <input\n                type=\"text\"\n                name=\"search\"\n                style={{width: '25vw'}}\n                value={searchValue}\n                onChange={e => setSearchValue(e.target.value)}\n                />\n            </div>\n        {novels\n                .filter(novel => novel.name.match(new RegExp(searchValue, \"i\")) || novel.author.match(new RegExp(searchValue, \"i\")))\n                .map(novel => {\n                    return <div key={novel.id} className=\"col-sm-12 col-md-2 col-lg-2 card\">\n\n\n\n\n\n\n                        <p>  {novel.name}\n                            < br />\n                            <span className=\"card-subheader\" >by</span> {novel.author}\n                            < br />\n                            <span className=\"card-subheader\">Rank:</span> {novel.rank}\n                            < br />\n                            <span key={novel.isComplete}\n                            >\n                                {novel.isComplete}</span>\n                        </p>\n                        <button className=\"btn btn-dark btn-sm  py-1\" onClick={() => setShowEdit(!showEdit)}>{showEdit ? 'Finished Updating' : 'Update Entry'}</button>\n                        {showEdit && <div>\n                            <form\n\n\n                                onSubmit={e => {\n                                    e.preventDefault();\n                                    editNovel({ variables: { _id: novel._id, isComplete: formState.isComplete } });\n                                    window.location.reload();\n                                }}\n                            >\n                                <select value={formState.isComplete}\n                                    onChange={handleChange}\n                                    type=\"isComplete\"\n                                    name=\"isComplete\"\n                                    placeholder=\"Update Completed Status\"\n                                    className=\"form-input w-100 select\">\n                                    <option value=\"Complete\">Complete</option>\n                                    <option value=\"Incomplete\">Incomplete</option>\n                                    <option selected value=\"N/A\"> Set Status</option>\n                                </select>\n\n\n\n                                <button className=\"btn btn-dark btn-sm  py-1\" type=\"submit\">Submit</button>\n                            </form>\n                        </div>}\n                        <div>\n                            <button className=\"btn btn-sm btn-primary py-1\"\n                                type=\"submit\"\n                                onClick={() => {\n                                    removeNovel({ variables: { _id: novel._id } })\n                                    window.location.reload()\n                                }}>Remove Entry</button>\n                        </div>\n\n\n\n\n                    </div>\n                })}\n\n        </div>\n\n    )\n}\n\n\n\nexport default FinishedNovels;",{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":29,"column":7,"nodeType":"178","messageId":"179","endLine":29,"endColumn":16},{"ruleId":"176","severity":1,"message":"180","line":11,"column":8,"nodeType":"178","messageId":"179","endLine":11,"endColumn":12},{"ruleId":"176","severity":1,"message":"181","line":15,"column":11,"nodeType":"178","messageId":"179","endLine":15,"endColumn":18},{"ruleId":"176","severity":1,"message":"182","line":5,"column":10,"nodeType":"178","messageId":"179","endLine":5,"endColumn":18},{"ruleId":"176","severity":1,"message":"183","line":5,"column":20,"nodeType":"178","messageId":"179","endLine":5,"endColumn":29},{"ruleId":"176","severity":1,"message":"184","line":20,"column":13,"nodeType":"178","messageId":"179","endLine":20,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":92,"column":52,"nodeType":"187","messageId":"188","endLine":92,"endColumn":60},{"ruleId":"176","severity":1,"message":"189","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"190","line":5,"column":24,"nodeType":"178","messageId":"179","endLine":5,"endColumn":41},{"ruleId":"176","severity":1,"message":"181","line":14,"column":13,"nodeType":"178","messageId":"179","endLine":14,"endColumn":20},{"ruleId":"176","severity":1,"message":"191","line":17,"column":12,"nodeType":"178","messageId":"179","endLine":17,"endColumn":23},{"ruleId":"176","severity":1,"message":"192","line":17,"column":25,"nodeType":"178","messageId":"179","endLine":17,"endColumn":39},{"ruleId":"176","severity":1,"message":"193","line":20,"column":25,"nodeType":"178","messageId":"179","endLine":20,"endColumn":30},{"ruleId":"176","severity":1,"message":"194","line":24,"column":9,"nodeType":"178","messageId":"179","endLine":24,"endColumn":13},{"ruleId":"176","severity":1,"message":"195","line":34,"column":9,"nodeType":"178","messageId":"179","endLine":34,"endColumn":15},{"ruleId":"196","severity":1,"message":"197","line":35,"column":60,"nodeType":"198","messageId":"199","endLine":35,"endColumn":62},{"ruleId":"185","severity":1,"message":"186","line":110,"column":84,"nodeType":"187","messageId":"188","endLine":110,"endColumn":92},{"ruleId":"176","severity":1,"message":"200","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"189","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":14},{"ruleId":"176","severity":1,"message":"183","line":3,"column":16,"nodeType":"178","messageId":"179","endLine":3,"endColumn":25},{"ruleId":"176","severity":1,"message":"201","line":4,"column":24,"nodeType":"178","messageId":"179","endLine":4,"endColumn":33},{"ruleId":"176","severity":1,"message":"184","line":20,"column":19,"nodeType":"178","messageId":"179","endLine":20,"endColumn":23},{"ruleId":"176","severity":1,"message":"189","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"190","line":5,"column":29,"nodeType":"178","messageId":"179","endLine":5,"endColumn":46},{"ruleId":"176","severity":1,"message":"181","line":12,"column":13,"nodeType":"178","messageId":"179","endLine":12,"endColumn":20},{"ruleId":"176","severity":1,"message":"193","line":19,"column":30,"nodeType":"178","messageId":"179","endLine":19,"endColumn":35},{"ruleId":"176","severity":1,"message":"184","line":20,"column":13,"nodeType":"178","messageId":"179","endLine":20,"endColumn":17},{"ruleId":"176","severity":1,"message":"189","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"190","line":5,"column":29,"nodeType":"178","messageId":"179","endLine":5,"endColumn":46},{"ruleId":"176","severity":1,"message":"202","line":8,"column":8,"nodeType":"178","messageId":"179","endLine":8,"endColumn":22},{"ruleId":"176","severity":1,"message":"181","line":12,"column":13,"nodeType":"178","messageId":"179","endLine":12,"endColumn":20},{"ruleId":"176","severity":1,"message":"193","line":24,"column":30,"nodeType":"178","messageId":"179","endLine":24,"endColumn":35},{"ruleId":"196","severity":1,"message":"197","line":40,"column":75,"nodeType":"198","messageId":"199","endLine":40,"endColumn":77},{"ruleId":"176","severity":1,"message":"190","line":5,"column":31,"nodeType":"178","messageId":"179","endLine":5,"endColumn":48},{"ruleId":"176","severity":1,"message":"181","line":12,"column":13,"nodeType":"178","messageId":"179","endLine":12,"endColumn":20},{"ruleId":"176","severity":1,"message":"193","line":19,"column":31,"nodeType":"178","messageId":"179","endLine":19,"endColumn":36},{"ruleId":"176","severity":1,"message":"184","line":20,"column":13,"nodeType":"178","messageId":"179","endLine":20,"endColumn":17},{"ruleId":"176","severity":1,"message":"203","line":3,"column":8,"nodeType":"178","messageId":"179","endLine":3,"endColumn":13},{"ruleId":"176","severity":1,"message":"189","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"190","line":5,"column":24,"nodeType":"178","messageId":"179","endLine":5,"endColumn":41},{"ruleId":"176","severity":1,"message":"204","line":9,"column":8,"nodeType":"178","messageId":"179","endLine":9,"endColumn":17},{"ruleId":"176","severity":1,"message":"181","line":13,"column":13,"nodeType":"178","messageId":"179","endLine":13,"endColumn":20},{"ruleId":"176","severity":1,"message":"193","line":27,"column":25,"nodeType":"178","messageId":"179","endLine":27,"endColumn":30},{"ruleId":"196","severity":1,"message":"197","line":43,"column":60,"nodeType":"198","messageId":"199","endLine":43,"endColumn":62},{"ruleId":"196","severity":1,"message":"197","line":43,"column":89,"nodeType":"198","messageId":"199","endLine":43,"endColumn":91},{"ruleId":"196","severity":1,"message":"197","line":45,"column":91,"nodeType":"198","messageId":"199","endLine":45,"endColumn":93},{"ruleId":"176","severity":1,"message":"189","line":2,"column":10,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"190","line":5,"column":24,"nodeType":"178","messageId":"179","endLine":5,"endColumn":41},{"ruleId":"176","severity":1,"message":"180","line":7,"column":8,"nodeType":"178","messageId":"179","endLine":7,"endColumn":12},{"ruleId":"176","severity":1,"message":"181","line":13,"column":13,"nodeType":"178","messageId":"179","endLine":13,"endColumn":20},{"ruleId":"176","severity":1,"message":"205","line":22,"column":9,"nodeType":"178","messageId":"179","endLine":22,"endColumn":17},{"ruleId":"176","severity":1,"message":"206","line":23,"column":9,"nodeType":"178","messageId":"179","endLine":23,"endColumn":19},{"ruleId":"176","severity":1,"message":"193","line":27,"column":25,"nodeType":"178","messageId":"179","endLine":27,"endColumn":30},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'errorLink' is assigned a value but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'loading' is assigned a value but never used.","'Redirect' is defined but never used.","'useParams' is defined but never used.","'data' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Link' is defined but never used.","'QUERY_SINGLE_USER' is defined but never used.","'searchValue' is assigned a value but never used.","'setSearchValue' is assigned a value but never used.","'error' is assigned a value but never used.","'user' is defined but never used.","'novels' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'gql' is defined but never used.","'ADD_NOVEL' is defined but never used.","'NonfictionForm' is defined but never used.","'React' is defined but never used.","'NovelForm' is defined but never used.","'complete' is defined but never used.","'incomplete' is defined but never used.","no-global-assign","no-unsafe-negation"]