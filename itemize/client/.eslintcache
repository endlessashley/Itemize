[{"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/index.js":"1","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/reportWebVitals.js":"2","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/App.js":"3","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Home.js":"4","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Profile.js":"5","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Signup.js":"6","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Login.js":"7","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Header/index.js":"8","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Footer/index.js":"9","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/auth.js":"10","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/queries.js":"11","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/mutations.js":"12","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UserList/index.js":"13","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NovelForm/index.js":"14","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelsList.js":"15","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UpdateNovel/index.js":"16","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/CompletedNovels.js":"17","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NonfictionsList.js":"18","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NonfictionForm/index.js":"19","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/CompletedNonfiction.js":"20"},{"size":500,"mtime":1638278857163,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1638278857179,"results":"23","hashOfConfig":"22"},{"size":2982,"mtime":1640267737282,"results":"24","hashOfConfig":"22"},{"size":677,"mtime":1639581812908,"results":"25","hashOfConfig":"22"},{"size":1027,"mtime":1640268246193,"results":"26","hashOfConfig":"22"},{"size":2702,"mtime":1638541164563,"results":"27","hashOfConfig":"22"},{"size":2522,"mtime":1639585823394,"results":"28","hashOfConfig":"22"},{"size":1490,"mtime":1639585761977,"results":"29","hashOfConfig":"22"},{"size":692,"mtime":1638284236232,"results":"30","hashOfConfig":"22"},{"size":725,"mtime":1639586140851,"results":"31","hashOfConfig":"22"},{"size":954,"mtime":1640265987373,"results":"32","hashOfConfig":"22"},{"size":1680,"mtime":1640266715068,"results":"33","hashOfConfig":"22"},{"size":1220,"mtime":1639581801122,"results":"34","hashOfConfig":"22"},{"size":3230,"mtime":1640137360484,"results":"35","hashOfConfig":"22"},{"size":5074,"mtime":1640265570588,"results":"36","hashOfConfig":"22"},{"size":2339,"mtime":1639679134109,"results":"37","hashOfConfig":"22"},{"size":7352,"mtime":1640265010919,"results":"38","hashOfConfig":"22"},{"size":4806,"mtime":1640267187318,"results":"39","hashOfConfig":"22"},{"size":3267,"mtime":1640267113146,"results":"40","hashOfConfig":"22"},{"size":7584,"mtime":1640267667657,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1md7kg3",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/index.js",[],["90","91"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/reportWebVitals.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/App.js",["92"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Home.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Profile.js",["93","94"],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Signup.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/Login.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Header/index.js",["95","96"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\nimport { Redirect, useParams } from 'react-router-dom';\n\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n\n  };\n  return (\n    <header className=\"mb-4 py-3 display-flex align-center\">\n      <div className=\"container flex-column justify-space-between-lg justify-center align-center text-center\">\n        <Link className=\"text-primary\" to=\"/\">\n          <h1 className=\"m-0\" style={{ fontSize: '3rem' }}>\n            Itemize\n          </h1>\n        </Link>\n        <p className=\"m-0 text-dark\" style={{ fontSize: '1.75rem', fontWeight: '700' }}>\n          Track your progress. Meet your goals.\n        </p>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/me\">\n                View My Profile\n              </Link>\n              <Link to = \"/\">\n              <button className=\"btn btn-lg btn-primary m-2\" onClick={logout}>Log Out\n              </button>\n              </Link>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-primary m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/Footer/index.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/auth.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/queries.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/utils/mutations.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UserList/index.js",[],"/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NovelForm/index.js",["97"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n// import { useStoreContext } from \"../../utils/GlobalState\";\n\nimport { ADD_NOVEL } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nfunction NovelForm(props) {\n  // const [state, dispatch] = useStoreContext();\n  const [formState, setFormState] = useState({ name: '', author: '', rank: '', isComplete: '' });\n\n\n  const [addNovel, { error }] = useMutation(ADD_NOVEL);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const data = await addNovel({\n        variables: { name: formState.name, author: formState.author, rank: formState.rank, isComplete: formState.isComplete },\n      });\n\n      window.location.reload();\n\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n\n\n\n  return (\n    <div>\n      <h4>Add a new novel to your list below:</h4>\n\n      {Auth.loggedIn() ? (\n        <form\n          className=\"flex-row justify-center justify-space-between-md align-center\"\n          onSubmit={handleFormSubmit}>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"author\"\n              placeholder=\"Author\"\n              value={formState.author}\n              type=\"author\"\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"name\"\n              type=\"name\"\n              placeholder=\"Title\"\n              className=\"form-input w-100\"\n              value={formState.name}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"rank\"\n              placeholder=\"Rank\"\n              type=\"rank\"\n              value={formState.rank}\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <select value={formState.isComplete}\n              onChange={handleChange}\n              type=\"isComplete\"\n              name=\"isComplete\"\n              className=\"form-input w-100\">\n                <option selected value=\"N/A\">Select Completed Status</option>\n              <option value=\"Complete\">Complete</option>\n              <option value=\"Incomplete\">Incomplete</option>\n              \n            </select>\n          </div>\n          <div className=\"col-12 col-lg-3\">\n            <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n              Add Novel\n            </button>\n          </div>\n          {error && (\n            <div className=\"col-12 my-3 bg-danger text-white p-3\">\n              Something went wrong...\n            </div>\n          )}\n        </form>\n      ) : (<p>\n        You need to be logged in to endorse skills. Please{' '}\n        <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n      </p>)\n\n      }\n    </div>\n  )\n}\n\n\nexport default NovelForm;\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NovelsList.js",["98","99","100","101","102","103","104"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_NOVELS, QUERY_SINGLE_USER } from '../utils/queries';\nimport { UPDATE_NOVEL, REMOVE_NOVEL } from '../utils/mutations';\n\nimport NovelForm from \"../components/NovelForm\";\nimport UpdateNovel from \"../components/UpdateNovel\"\n\nfunction NovelsList() {\n    const { loading, data } = useQuery(QUERY_NOVELS);\n    const [formState, setFormState] = useState('');\n    const [showEdit, setShowEdit] = useState(false);\n\n    const [removeNovel] = useMutation(REMOVE_NOVEL);\n\n\n    const [editNovel, { error }] = useMutation(UPDATE_NOVEL)\n\n    let novels;\n\n    let x = document.getElementById(\"edit-box\")\n\n    let condition\n\n\n    if (data) {\n        novels = data.novels\n        console.log(novels)\n    }\n\n    // novels.map((novel) => {\n    //     let condition\n    //     if (novel.isComplete === \"Complete\") {\n    //         condition = true\n    //     }\n    // })\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n\n        console.log(formState)\n    };\n\n\n    // const getCondition = () => {\n    //     let condition\n    //     novels.map(novel);\n    //     if (novel.isComplete === \"Complete\") {\n    //         condition = true\n    //     } else condition = false\n    // }\n\n\n    return (\n        <>\n\n\n                <div className=\"row\">\n\n\n                    {novels ? (\n                        <>\n                            <h2>Your Novels:</h2>\n                            {novels.map((novel) => (\n\n                                <div\n                                    key={novel._id}\n\n                                    className=\"col-sm-12 col-md-2 col-lg-2 card\"\n                                \n\n                                >\n                                    <p>  {novel.name}\n                                        < br />\n                                        <span className=\"card-subheader\" >by</span> {novel.author}\n                                        < br />\n                                        <span className=\"card-subheader\">Rank:</span> {novel.rank}\n                                        < br />\n                                        <span key={novel.isComplete}>{novel.isComplete}</span>\n                                    </p>\n                                    <button className=\"btn btn-dark btn-sm  py-1\" onClick={() => setShowEdit(!showEdit)}>{showEdit ? 'Finished Updating' : 'Update Entry'}</button>\n                                    {showEdit && <div>\n                                        <form\n\n                                            // className=\"flex-row justify-center justify-space-between-md align-center\"\n                                            onSubmit={e => {\n                                                e.preventDefault();\n                                                editNovel({ variables: { _id: novel._id, isComplete: formState.isComplete } });\n                                                window.location.reload();\n                                            }}\n                                        >\n                                            <select value={formState.isComplete}\n                                                onChange={handleChange}\n                                                type=\"isComplete\"\n                                                name=\"isComplete\"\n                                                placeholder=\"Update Completed Status\"\n                                                className=\"form-input w-100 select\">\n                                                <option value=\"Complete\">Complete</option>\n                                                <option value=\"Incomplete\">Incomplete</option>\n                                                <option selected value=\"N/A\"> Set Status</option>\n                                            </select>\n\n\n\n                                            <button className=\"btn btn-dark btn-sm  py-1\" type=\"submit\">Submit</button>\n                                        </form>\n                                    </div>}\n                                    <div>\n                                        <button className=\"btn btn-sm btn-primary py-1\"\n                                            type=\"submit\"\n                                            onClick={() => {\n                                                removeNovel({ variables: { _id: novel._id } })\n                                            }}>Remove Entry</button>\n                                    </div>\n\n\n\n                                </div>\n\n\n\n\n\n\n                            ))}\n                            <div className=\"col-sm-12\">\n                                <NovelForm />\n                            </div>\n                        </>\n                    ) : null}\n                </div>\n\n        </>\n    );\n}\n\n\nexport default NovelsList;","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/UpdateNovel/index.js",["105","106","107","108","109"],"import React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { Link, useParams } from 'react-router-dom';\nimport { UPDATE_NOVEL, ADD_NOVEL } from '../../utils/mutations';\nimport Auth from '../../utils/auth';\n\n\nfunction UpdateNovel(props) {\n    const [isComplete, setIsComplete] = useState('');\n    // const [novelId, set_id] = useState('');\n    const [updateNovel] = useMutation(UPDATE_NOVEL);\n    // const [addNovel, {error}] = useMutation(ADD_NOVEL)\n\n  \n\n    const handleEditSubmit = async (event) => {\n        event.preventDefault();\n    \n        try {\n          const { data } = await updateNovel({\n            variables: {\n              isComplete\n            },\n          });\n          setIsComplete('');\n        //   (data);\n        //   console.log(props)\n          //calls for the query on either the homepage or daypage to run again\n          props.refetch();\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n    // const handleEditSubmit = async (event) => {\n    //     event.preventDefault();\n\n    //     try {\n    //         const { data } = await updateNovel({\n    //             variables: {\n    //                 novelId,\n    //                 isComplete,\n    //             },\n    //         });\n    //         setIsComplete('');\n    //         set_id('');\n    //         console.log(data);\n    //         window.location.reload();\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n    // };\n\n    return (\n            <div>\n        \n              {Auth.loggedIn() ? (\n              <div>\n                  <h3>Update task:</h3>\n                  <form className=\"\" onSubmit={handleEditSubmit}>\n                    <input\n                      type=\"text\"\n                      value={isComplete}\n                      name=\"text\"\n                      onChange={(e) => {\n                        setIsComplete(e.target.value)\n                      }}\n                    ></input>\n                    <button className=\"container\">Update</button>\n                  </form>\n                </div>\n                )\n               : (\n                <p>\n                  You need to be logged in to start a todo list.\n                </p>\n              )}\n            </div>\n          );\n        };\n\n\n\nexport default UpdateNovel\n\n\n\n\n","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/CompletedNovels.js",["110","111","112","113","114","115"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_NOVELS, QUERY_SINGLE_USER } from '../utils/queries';\nimport { UPDATE_NOVEL, REMOVE_NOVEL } from '../utils/mutations';\n\nimport NovelForm from \"../components/NovelForm\";\n\nfunction CompletedNovels() {\n\n    const { loading, data } = useQuery(QUERY_NOVELS);\n    const [showEdit, setShowEdit] = useState(false);\n    const [formState, setFormState] = useState('');\n\n    const [removeNovel] = useMutation(REMOVE_NOVEL);\n\n    let novels;\n    let complete;\n    let incomplete;\n\n\n\n    const [editNovel, { error }] = useMutation(UPDATE_NOVEL)\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n\n        console.log(formState)\n    };\n\n    if (data) {\n        novels = data.novels\n        console.log(novels)\n        complete = novels.filter(novel => novel.isComplete == \"Complete\");\n        console.log(complete)\n        incomplete = novels.filter(novel => novel.isComplete !==\"Complete\");\n        console.log(incomplete)\n\n    }\n    \n\nreturn (\n    <>\n\n\n        <div className=\"row\">\n\n\n            {complete ? (\n                <>\n                    <h2>Completed Novels ({complete.length}/{novels.length}):</h2>\n                    {complete.map((novel) => (\n\n\n                        <div\n                            key={novel._id}\n\n                            className=\"col-sm-12 col-md-2 col-lg-2 card\"\n                 \n\n                        >\n                            <p>  {novel.name}\n                                < br />\n                                <span className=\"card-subheader\" >by</span> {novel.author}\n                                < br />\n                                <span className=\"card-subheader\">Rank:</span> {novel.rank}\n                                < br />\n                                <span key={novel.isComplete}\n                                    >\n                                    {novel.isComplete}</span>\n                            </p>\n                            <button className=\"btn btn-dark btn-sm  py-1\" onClick={() => setShowEdit(!showEdit)}>{showEdit ? 'Finished Updating' : 'Update Entry'}</button>\n                            {showEdit && <div>\n                                <form\n\n\n                                    onSubmit={e => {\n                                        e.preventDefault();\n                                        editNovel({ variables: { _id: novel._id, isComplete: formState.isComplete } });\n                                        window.location.reload();\n                                    }}\n                                >\n                                    <select value={formState.isComplete}\n                                        onChange={handleChange}\n                                        type=\"isComplete\"\n                                        name=\"isComplete\"\n                                        placeholder=\"Update Completed Status\"\n                                        className=\"form-input w-100 select\">\n                                        <option value=\"Complete\">Complete</option>\n                                        <option value=\"Incomplete\">Incomplete</option>\n                                        <option selected value=\"N/A\"> Set Status</option>\n                                    </select>\n\n\n\n                                    <button className=\"btn btn-dark btn-sm  py-1\" type=\"submit\">Submit</button>\n                                </form>\n                            </div>}\n                            <div>\n                                <button className=\"btn btn-sm btn-primary py-1\"\n                                    type=\"submit\"\n                                    onClick={() => {\n                                        removeNovel({ variables: { _id: novel._id } })\n                                        window.location.reload()\n                                    }}>Remove Entry</button>\n                            </div>\n\n\n\n                        </div>\n\n\n\n\n\n\n                    ))}\n\n                </>\n            ) : null}\n            {incomplete ? (\n                <>\n                    <h2>Incomplete ({incomplete.length}/{novels.length}):</h2>\n                    {incomplete.map((novel) => (\n\n\n                        <div\n                            key={novel._id}\n\n                            className=\"col-sm-12 col-md-2 col-lg-2 card\"\n                 \n\n                        >\n                            <p>  {novel.name}\n                                < br />\n                                <span className=\"card-subheader\" >by</span> {novel.author}\n                                < br />\n                                <span className=\"card-subheader\">Rank:</span> {novel.rank}\n                                < br />\n                                <span key={novel.isComplete}\n                                    >\n                                    {novel.isComplete}</span>\n                            </p>\n                            <button className=\"btn btn-dark btn-sm  py-1\" onClick={() => setShowEdit(!showEdit)}>{showEdit ? 'Finished Updating' : 'Update Entry'}</button>\n                            {showEdit && <div>\n                                <form\n\n\n                                    onSubmit={e => {\n                                        e.preventDefault();\n                                        editNovel({ variables: { _id: novel._id, isComplete: formState.isComplete } });\n                                        window.location.reload();\n                                    }}\n                                >\n                                    <select value={formState.isComplete}\n                                        onChange={handleChange}\n                                        type=\"isComplete\"\n                                        name=\"isComplete\"\n                                        placeholder=\"Update Completed Status\"\n                                        className=\"form-input w-100 select\">\n                                        <option value=\"Complete\">Complete</option>\n                                        <option value=\"Incomplete\">Incomplete</option>\n                                        <option selected value=\"N/A\"> Set Status</option>\n                                    </select>\n\n\n\n                                    <button className=\"btn btn-dark btn-sm  py-1\" type=\"submit\">Submit</button>\n                                </form>\n                            </div>}\n                            <div>\n                                <button className=\"btn btn-sm btn-primary py-1\"\n                                    type=\"submit\"\n                                    onClick={() => {\n                                        removeNovel({ variables: { _id: novel._id } })\n                                        window.location.reload()\n                                    }}>Remove Entry</button>\n                            </div>\n\n\n\n                        </div>\n\n\n\n\n\n\n                    ))}\n\n                </>\n            ) : null}\n\n\n\n        </div>\n\n    </>\n);\n}\n\n\nexport default CompletedNovels;","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/NonfictionsList.js",["116","117","118","119"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_NONFICTIONS, QUERY_SINGLE_USER } from '../utils/queries';\nimport { UPDATE_NONFICTION, REMOVE_NONFICTION } from '../utils/mutations';\n\nimport NonfictionForm from \"../components/NonfictionForm\";\n\n\nfunction NonfictionsList() {\n    const { loading, data } = useQuery(QUERY_NONFICTIONS);\n    const [formState, setFormState] = useState('');\n    const [showEdit, setShowEdit] = useState(false);\n\n    const [removeNonfiction] = useMutation(REMOVE_NONFICTION);\n\n\n    const [editNonfiction, { error }] = useMutation(UPDATE_NONFICTION)\n\n    let nonfictions;\n\n    // let x = document.getElementById(\"edit-box\")\n\n    // let condition\n\n\n    if (data) {\n        nonfictions = data.nonfictions\n        console.log(nonfictions)\n    }\n\n\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n\n        console.log(formState)\n    };\n\n\n\n\n\n    return (\n        <>\n\n\n                <div className=\"row\">\n\n\n                    {nonfictions ? (\n                        <>\n                            <h2>Your Nonfiction:</h2>\n                            {nonfictions.map((nonfiction) => (\n\n                                <div\n                                    key={nonfiction._id}\n\n                                    className=\"col-sm-12 col-md-2 col-lg-2 card\"\n                                \n\n                                >\n                                    <p>  {nonfiction.name}\n                                        < br />\n                                        <span className=\"card-subheader\" >by</span> {nonfiction.author}\n                                        < br />\n                                        <span className=\"card-subheader\">Rank:</span> {nonfiction.rank}\n                                        < br />\n                                        <span key={nonfiction.isComplete}>{nonfiction.isComplete}</span>\n                                    </p>\n                                    <button className=\"btn btn-dark btn-sm  py-1\" onClick={() => setShowEdit(!showEdit)}>{showEdit ? 'Finished Updating' : 'Update Entry'}</button>\n                                    {showEdit && <div>\n                                        <form\n\n                                            // className=\"flex-row justify-center justify-space-between-md align-center\"\n                                            onSubmit={e => {\n                                                e.preventDefault();\n                                                editNonfiction({ variables: { _id: nonfiction._id, isComplete: formState.isComplete } });\n                                                window.location.reload();\n                                            }}\n                                        >\n                                            <select value={formState.isComplete}\n                                                onChange={handleChange}\n                                                type=\"isComplete\"\n                                                name=\"isComplete\"\n                                                placeholder=\"Update Completed Status\"\n                                                className=\"form-input w-100 select\">\n                                                <option value=\"Complete\">Complete</option>\n                                                <option value=\"Incomplete\">Incomplete</option>\n                                                <option selected value=\"N/A\"> Set Status</option>\n                                            </select>\n\n\n\n                                            <button className=\"btn btn-dark btn-sm  py-1\" type=\"submit\">Submit</button>\n                                        </form>\n                                    </div>}\n                                    <div>\n                                        <button className=\"btn btn-sm btn-primary py-1\"\n                                            type=\"submit\"\n                                            onClick={() => {\n                                                removeNonfiction({ variables: { _id: nonfiction._id } })\n                                            }}>Remove Entry</button>\n                                    </div>\n\n\n\n                                </div>\n\n\n\n\n\n\n                            ))}\n                            <div className=\"col-sm-12\">\n                                <NonfictionForm />\n                            </div>\n                        </>\n                    ) : null}\n                </div>\n\n        </>\n    );\n}\n\n\nexport default NonfictionsList;","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/components/NonfictionForm/index.js",["120"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n// import { useStoreContext } from \"../../utils/GlobalState\";\n\nimport { ADD_NONFICTION } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nfunction NonfictionForm(props) {\n  // const [state, dispatch] = useStoreContext();\n  const [formState, setFormState] = useState({ name: '', author: '', rank: '', isComplete: '' });\n\n\n  const [addNonfiction, { error }] = useMutation(ADD_NONFICTION);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const data = await addNonfiction({\n        variables: { name: formState.name, author: formState.author, rank: formState.rank, isComplete: formState.isComplete },\n      });\n\n      window.location.reload();\n\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n\n\n\n  return (\n    <div>\n      <h4>Add new nonfiction to your list below:</h4>\n\n      {Auth.loggedIn() ? (\n        <form\n          className=\"flex-row justify-center justify-space-between-md align-center\"\n          onSubmit={handleFormSubmit}>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"author\"\n              placeholder=\"Author\"\n              value={formState.author}\n              type=\"author\"\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"name\"\n              type=\"name\"\n              placeholder=\"Title\"\n              className=\"form-input w-100\"\n              value={formState.name}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <input\n              name=\"rank\"\n              placeholder=\"Rank\"\n              type=\"rank\"\n              value={formState.rank}\n              className=\"form-input w-100\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"col-12 col-lg-9\">\n            <select value={formState.isComplete}\n              onChange={handleChange}\n              type=\"isComplete\"\n              name=\"isComplete\"\n              className=\"form-input w-100\">\n                <option selected value=\"N/A\">Select Completed Status</option>\n              <option value=\"Complete\">Complete</option>\n              <option value=\"Incomplete\">Incomplete</option>\n              \n            </select>\n          </div>\n          <div className=\"col-12 col-lg-3\">\n            <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n              Add Nonfiction\n            </button>\n          </div>\n          {error && (\n            <div className=\"col-12 my-3 bg-danger text-white p-3\">\n              Something went wrong...\n            </div>\n          )}\n        </form>\n      ) : (<p>\n        You need to be logged in to endorse skills. Please{' '}\n        <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n      </p>)\n\n      }\n    </div>\n  )\n}\n\n\nexport default NonfictionForm;","/Users/ashleytate/Desktop/BootcampHomework/itemize/itemize/client/src/pages/CompletedNonfiction.js",["121","122","123","124","125","126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":26,"column":7,"nodeType":"133","messageId":"134","endLine":26,"endColumn":16},{"ruleId":"131","severity":1,"message":"135","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":12},{"ruleId":"131","severity":1,"message":"136","line":15,"column":11,"nodeType":"133","messageId":"134","endLine":15,"endColumn":18},{"ruleId":"131","severity":1,"message":"137","line":5,"column":10,"nodeType":"133","messageId":"134","endLine":5,"endColumn":18},{"ruleId":"131","severity":1,"message":"138","line":5,"column":20,"nodeType":"133","messageId":"134","endLine":5,"endColumn":29},{"ruleId":"131","severity":1,"message":"139","line":20,"column":13,"nodeType":"133","messageId":"134","endLine":20,"endColumn":17},{"ruleId":"131","severity":1,"message":"140","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"141","line":5,"column":24,"nodeType":"133","messageId":"134","endLine":5,"endColumn":41},{"ruleId":"131","severity":1,"message":"142","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":19},{"ruleId":"131","severity":1,"message":"136","line":12,"column":13,"nodeType":"133","messageId":"134","endLine":12,"endColumn":20},{"ruleId":"131","severity":1,"message":"143","line":19,"column":25,"nodeType":"133","messageId":"134","endLine":19,"endColumn":30},{"ruleId":"131","severity":1,"message":"144","line":23,"column":9,"nodeType":"133","messageId":"134","endLine":23,"endColumn":10},{"ruleId":"131","severity":1,"message":"145","line":25,"column":9,"nodeType":"133","messageId":"134","endLine":25,"endColumn":18},{"ruleId":"131","severity":1,"message":"146","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":13},{"ruleId":"131","severity":1,"message":"140","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"138","line":3,"column":16,"nodeType":"133","messageId":"134","endLine":3,"endColumn":25},{"ruleId":"131","severity":1,"message":"147","line":4,"column":24,"nodeType":"133","messageId":"134","endLine":4,"endColumn":33},{"ruleId":"131","severity":1,"message":"139","line":20,"column":19,"nodeType":"133","messageId":"134","endLine":20,"endColumn":23},{"ruleId":"131","severity":1,"message":"140","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"141","line":5,"column":24,"nodeType":"133","messageId":"134","endLine":5,"endColumn":41},{"ruleId":"131","severity":1,"message":"148","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":17},{"ruleId":"131","severity":1,"message":"136","line":12,"column":13,"nodeType":"133","messageId":"134","endLine":12,"endColumn":20},{"ruleId":"131","severity":1,"message":"143","line":24,"column":25,"nodeType":"133","messageId":"134","endLine":24,"endColumn":30},{"ruleId":"149","severity":1,"message":"150","line":40,"column":60,"nodeType":"151","messageId":"152","endLine":40,"endColumn":62},{"ruleId":"131","severity":1,"message":"140","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"141","line":5,"column":29,"nodeType":"133","messageId":"134","endLine":5,"endColumn":46},{"ruleId":"131","severity":1,"message":"136","line":12,"column":13,"nodeType":"133","messageId":"134","endLine":12,"endColumn":20},{"ruleId":"131","severity":1,"message":"143","line":19,"column":30,"nodeType":"133","messageId":"134","endLine":19,"endColumn":35},{"ruleId":"131","severity":1,"message":"139","line":20,"column":13,"nodeType":"133","messageId":"134","endLine":20,"endColumn":17},{"ruleId":"131","severity":1,"message":"140","line":2,"column":10,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"141","line":5,"column":29,"nodeType":"133","messageId":"134","endLine":5,"endColumn":46},{"ruleId":"131","severity":1,"message":"153","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":22},{"ruleId":"131","severity":1,"message":"136","line":12,"column":13,"nodeType":"133","messageId":"134","endLine":12,"endColumn":20},{"ruleId":"131","severity":1,"message":"143","line":24,"column":30,"nodeType":"133","messageId":"134","endLine":24,"endColumn":35},{"ruleId":"149","severity":1,"message":"150","line":40,"column":75,"nodeType":"151","messageId":"152","endLine":40,"endColumn":77},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'errorLink' is assigned a value but never used.","Identifier","unusedVar","'Auth' is defined but never used.","'loading' is assigned a value but never used.","'Redirect' is defined but never used.","'useParams' is defined but never used.","'data' is assigned a value but never used.","'Link' is defined but never used.","'QUERY_SINGLE_USER' is defined but never used.","'UpdateNovel' is defined but never used.","'error' is assigned a value but never used.","'x' is assigned a value but never used.","'condition' is defined but never used.","'gql' is defined but never used.","'ADD_NOVEL' is defined but never used.","'NovelForm' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NonfictionForm' is defined but never used.","no-global-assign","no-unsafe-negation"]